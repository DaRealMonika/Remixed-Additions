---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mike.
--- DateTime: 04.08.18 18:14
---

local RPD = require "scripts/lib/revampedCommonClasses"
local actor = require "scripts/lib/actor"
local storage = require "scripts/lib/storage"
local mob = require "scripts/lib/mob"

local ShadowType = {Shadow=true,MazeShadow=true,DarkElemental=true,ShadowLord=true,Lich=true,DreadKnight=true,DeadKnight=true,DarkMage=true}
local IceType = {Kobold=true,IceElemental=true,KoboldIcemancer=true,ColdSpirit=true,IceGuardian=true,IceGuardianCore=true,IceMage=true}
local SpiderType = {SpiderMind=true,SpiderGuard=true,SpiderQueen=true,SpiderServant=true,SpiderExploding=true,SpiderMindAmber=true,UndeadSpiderMutant=true}
local FireType = {FireElemental=true,BurningFist=true,FireMage=true}

local Chasm = {[43]=true,[44]=true,[45]=true,[46]=true}

local function updateLatestDeadMob(deadMob)
    local level = RPD.Dungeon.level
    local name = deadMob:getEntityKind()
    local counterId = name .."Kills"
    local prevAmount = storage.get(counterId) or 0
    storage.put(counterId, prevAmount+1)
    if ShadowType[name] then
        if math.random(1,100) <= 8 then
            level:drop(RPD.ItemFactory:itemByName("SoulShard"), deadMob:getPos())
        end
    end
    if IceType[name] then
        if math.random(1,100) <= 8 then
            level:drop(RPD.ItemFactory:itemByName("IceGuardianCoreModule"), deadMob:getPos())
        end
    end
    if SpiderType[name] then
        if math.random(1,100) <= 8 then
            level:drop(RPD.ItemFactory:itemByName("SpiderQueenCarapace"), deadMob:getPos())
        end
    end
    if FireType[name] then
        if math.random(1,100) <= 8 then
            level:drop(RPD.ItemFactory:itemByName("FrozenFlame"), deadMob:getPos())
        end
    end
end

mob.installOnDieCallback(updateLatestDeadMob)

return actor.init({
    act = function()
        return true
    end,
    actionTime = function()
        return 1
    end,
    activate = function()
        local level = RPD.Dungeon.level
        local levelId = RPD.Dungeon.levelId
        local levelSet = storage.get(levelId.."Set") or false
        if not levelSet then
            for i = 0, level:getLength() do
                if level.map[i] == 9 then
                    if math.random(1,100) <= 35 then
                        level:set(i-1, 14)
                        RPD.GameScene:updateMap()
                        local tile = {level:cellX(i),level:cellY(i)}
                        if tile[2] ~= level:getHeight() then
                            if Chasm[level.map[level:cell(tile[1],tile[2]+1)]] then
                                level:set(level:cell(tile[1]-1,tile[2]+1), 44)
                                RPD.GameScene:updateMap()
                            end
                        end
                    end
                end
                if i == level:getLength() then
                    storage.put(levelId.."Set", true)
                end
            end
        end
        for i = 0, level:getLength() do
            local target = RPD.Actor:findChar(i)
            if target then
                if target ~= hero then
                    if target:hp() < 0 then
                        target:hp(1)
                    end
                end
            end
        end
    end
})